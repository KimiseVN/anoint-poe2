import discord
import pandas as pd
import os

# ƒê·ªçc d·ªØ li·ªáu t·ª´ file Excel
data = pd.read_excel("AnointList.xlsx")

# Lo·∫°i b·ªè kho·∫£ng tr·∫Øng th·ª´a v√† chuy·ªÉn t·∫•t c·∫£ t√™n skill trong c·ªôt 'NotablePassive' v·ªÅ ch·ªØ th∆∞·ªùng
data['NotablePassive'] = data['NotablePassive'].str.strip().str.lower()
data['DistilledEmotions'] = data['DistilledEmotions'].str.strip()  # N·∫øu c·∫ßn, c√≥ th·ªÉ √°p d·ª•ng .str.strip() cho c·ªôt DistilledEmotions n·∫øu c√≥ kho·∫£ng tr·∫Øng th·ª´a
data['AnointEffects'] = data['AnointEffects'].str.strip()  # N·∫øu c·∫ßn, c√≥ th·ªÉ √°p d·ª•ng .str.strip() cho c·ªôt AnointEffects n·∫øu c√≥ kho·∫£ng tr·∫Øng th·ª´a

# T·∫°o bot v·ªõi intents ƒë·ªÉ l·∫Øng nghe tin nh·∫Øn
intents = discord.Intents.default()
intents.messages = True  # ƒê·∫£m b·∫£o bot c√≥ th·ªÉ l·∫Øng nghe c√°c tin nh·∫Øn
bot = discord.Client(intents=intents)

# ƒê·∫∑t ID k√™nh m√† bot s·∫Ω ho·∫°t ƒë·ªông
ALLOWED_CHANNEL_ID = 1337773283860545546

# S·ª± ki·ªán khi bot ƒë√£ s·∫µn s√†ng
@bot.event
async def on_ready():
    print(f'Bot ƒë√£ ƒëƒÉng nh·∫≠p nh∆∞ {bot.user}')

# S·ª± ki·ªán khi bot nh·∫≠n tin nh·∫Øn
@bot.event
async def on_message(message):
    # Tr√°nh bot ph·∫£n h·ªìi ch√≠nh n√≥
    if message.author == bot.user:
        return

    # Ki·ªÉm tra n·∫øu tin nh·∫Øn ƒë∆∞·ª£c g·ª≠i t·ª´ ƒë√∫ng k√™nh
    if message.channel.id != ALLOWED_CHANNEL_ID:
        return  # Kh√¥ng x·ª≠ l√Ω tin nh·∫Øn n·∫øu kh√¥ng ph·∫£i k√™nh ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh

    # X·ª≠ l√Ω tin nh·∫Øn vƒÉn b·∫£n (t√¨m skill theo t√™n)
    skill_name = message.content.strip().lower()  # Lo·∫°i b·ªè kho·∫£ng tr·∫Øng v√† chuy·ªÉn th√†nh ch·ªØ th∆∞·ªùng
    print(f'Ng∆∞·ªùi d√πng nh·∫≠p: {skill_name}')  # Debugging: In ra t√™n skill ng∆∞·ªùi d√πng nh·∫≠p

    # T√¨m skill trong to√†n b·ªô c·ªôt "NotablePassive" (ki·ªÉm tra ph·∫ßn t·ª≠ con trong t√™n)
    skill_info = data[data['NotablePassive'].str.contains(skill_name, case=False, na=False)]  # T√¨m ki·∫øm kh√¥ng ph√¢n bi·ªát ch·ªØ hoa/ch·ªØ th∆∞·ªùng

    # Ki·ªÉm tra n·∫øu t√¨m th·∫•y skill
    if not skill_info.empty:
        # T·∫°o ph·∫£n h·ªìi v·ªõi t·∫•t c·∫£ k·∫øt qu·∫£ t√¨m ƒë∆∞·ª£c
        response = ""
        count = 0
        for index, row in skill_info.iterrows():
            distilled_emotions = row["DistilledEmotions"]
            anoint_effects = row["AnointEffects"]

            # Th√™m th√¥ng tin c·ªßa m·ªói skill v√†o ph·∫£n h·ªìi
            response += (
                f'**{row["NotablePassive"].capitalize()}**\n'
                f'üí¨ **Distilled Emotions:** {distilled_emotions}\n'
                f'‚ö° **Anoint Effects:** {anoint_effects}\n\n'
            )

            count += 1
            # N·∫øu tin nh·∫Øn qu√° d√†i (> 2000 k√Ω t·ª±), g·ª≠i n√≥ v√† t·∫°o ph·∫£n h·ªìi m·ªõi
            if len(response) > 2000:
                await message.channel.send(response)
                response = ""  # Reset l·∫°i ph·∫£n h·ªìi sau khi g·ª≠i
                count = 0

        # G·ª≠i tin nh·∫Øn c√≤n l·∫°i n·∫øu c√≥
        if response:
            await message.channel.send(response)
    else:
        await message.channel.send("Kh√¥ng t√¨m th·∫•y th√¥ng tin cho skill n√†y.")

# L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
discord_token = os.getenv('DISCORD_TOKEN')

# Ch·∫°y bot
if discord_token:
    bot.run(discord_token)
else:
    print("Kh√¥ng t√¨m th·∫•y Discord Token trong bi·∫øn m√¥i tr∆∞·ªùng.")
